// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class PlayMJ {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_sendloginInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::sendloginInfo, global::sendloginInfo.Builder> internal__static_sendloginInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_returnUserInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::returnUserInfo, global::returnUserInfo.Builder> internal__static_returnUserInfo__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static PlayMJ() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxQbGF5TUoucHJvdG8iOAoNc2VuZGxvZ2luSW5mbxIMCgRuYW1lGAEgASgJ", 
          "EgoKAmlkGAIgAigFEg0KBWVtYWlsGAMgASgJIlYKDnJldHVyblVzZXJJbmZv", 
          "EgoKAmlkGAEgAigFEg4KBnJvb21JRBgCIAEoBRISCgpwYWx5U3RhdHVzGAMg", 
        "ASgFEhQKDGhlYWRQb3J0cmFpdBgEIAEoCQ=="));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_sendloginInfo__Descriptor = Descriptor.MessageTypes[0];
      internal__static_sendloginInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::sendloginInfo, global::sendloginInfo.Builder>(internal__static_sendloginInfo__Descriptor,
              new string[] { "Name", "Id", "Email", });
      internal__static_returnUserInfo__Descriptor = Descriptor.MessageTypes[1];
      internal__static_returnUserInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::returnUserInfo, global::returnUserInfo.Builder>(internal__static_returnUserInfo__Descriptor,
              new string[] { "Id", "RoomID", "PalyStatus", "HeadPortrait", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class sendloginInfo : pb::GeneratedMessage<sendloginInfo, sendloginInfo.Builder> {
  private sendloginInfo() { }
  private static readonly sendloginInfo defaultInstance = new sendloginInfo().MakeReadOnly();
  private static readonly string[] _sendloginInfoFieldNames = new string[] { "email", "id", "name" };
  private static readonly uint[] _sendloginInfoFieldTags = new uint[] { 26, 16, 10 };
  public static sendloginInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override sendloginInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override sendloginInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PlayMJ.internal__static_sendloginInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<sendloginInfo, sendloginInfo.Builder> InternalFieldAccessors {
    get { return global::PlayMJ.internal__static_sendloginInfo__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private int id_;
  public bool HasId {
    get { return hasId; }
  }
  public int Id {
    get { return id_; }
  }
  
  public const int EmailFieldNumber = 3;
  private bool hasEmail;
  private string email_ = "";
  public bool HasEmail {
    get { return hasEmail; }
  }
  public string Email {
    get { return email_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasId) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _sendloginInfoFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[2], Name);
    }
    if (hasId) {
      output.WriteInt32(2, field_names[1], Id);
    }
    if (hasEmail) {
      output.WriteString(3, field_names[0], Email);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasName) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Name);
    }
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Id);
    }
    if (hasEmail) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Email);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static sendloginInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static sendloginInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static sendloginInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static sendloginInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static sendloginInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static sendloginInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static sendloginInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static sendloginInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static sendloginInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static sendloginInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private sendloginInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(sendloginInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<sendloginInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(sendloginInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private sendloginInfo result;
    
    private sendloginInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        sendloginInfo original = result;
        result = new sendloginInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override sendloginInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::sendloginInfo.Descriptor; }
    }
    
    public override sendloginInfo DefaultInstanceForType {
      get { return global::sendloginInfo.DefaultInstance; }
    }
    
    public override sendloginInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is sendloginInfo) {
        return MergeFrom((sendloginInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(sendloginInfo other) {
      if (other == global::sendloginInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_sendloginInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _sendloginInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 16: {
            result.hasId = input.ReadInt32(ref result.id_);
            break;
          }
          case 26: {
            result.hasEmail = input.ReadString(ref result.email_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasId {
      get { return result.hasId; }
    }
    public int Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(int value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasEmail {
      get { return result.hasEmail; }
    }
    public string Email {
      get { return result.Email; }
      set { SetEmail(value); }
    }
    public Builder SetEmail(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasEmail = true;
      result.email_ = value;
      return this;
    }
    public Builder ClearEmail() {
      PrepareBuilder();
      result.hasEmail = false;
      result.email_ = "";
      return this;
    }
  }
  static sendloginInfo() {
    object.ReferenceEquals(global::PlayMJ.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class returnUserInfo : pb::GeneratedMessage<returnUserInfo, returnUserInfo.Builder> {
  private returnUserInfo() { }
  private static readonly returnUserInfo defaultInstance = new returnUserInfo().MakeReadOnly();
  private static readonly string[] _returnUserInfoFieldNames = new string[] { "headPortrait", "id", "palyStatus", "roomID" };
  private static readonly uint[] _returnUserInfoFieldTags = new uint[] { 34, 8, 24, 16 };
  public static returnUserInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override returnUserInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override returnUserInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::PlayMJ.internal__static_returnUserInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<returnUserInfo, returnUserInfo.Builder> InternalFieldAccessors {
    get { return global::PlayMJ.internal__static_returnUserInfo__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 1;
  private bool hasId;
  private int id_;
  public bool HasId {
    get { return hasId; }
  }
  public int Id {
    get { return id_; }
  }
  
  public const int RoomIDFieldNumber = 2;
  private bool hasRoomID;
  private int roomID_;
  public bool HasRoomID {
    get { return hasRoomID; }
  }
  public int RoomID {
    get { return roomID_; }
  }
  
  public const int PalyStatusFieldNumber = 3;
  private bool hasPalyStatus;
  private int palyStatus_;
  public bool HasPalyStatus {
    get { return hasPalyStatus; }
  }
  public int PalyStatus {
    get { return palyStatus_; }
  }
  
  public const int HeadPortraitFieldNumber = 4;
  private bool hasHeadPortrait;
  private string headPortrait_ = "";
  public bool HasHeadPortrait {
    get { return hasHeadPortrait; }
  }
  public string HeadPortrait {
    get { return headPortrait_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasId) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _returnUserInfoFieldNames;
    if (hasId) {
      output.WriteInt32(1, field_names[1], Id);
    }
    if (hasRoomID) {
      output.WriteInt32(2, field_names[3], RoomID);
    }
    if (hasPalyStatus) {
      output.WriteInt32(3, field_names[2], PalyStatus);
    }
    if (hasHeadPortrait) {
      output.WriteString(4, field_names[0], HeadPortrait);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
    }
    if (hasRoomID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, RoomID);
    }
    if (hasPalyStatus) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, PalyStatus);
    }
    if (hasHeadPortrait) {
      size += pb::CodedOutputStream.ComputeStringSize(4, HeadPortrait);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static returnUserInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static returnUserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static returnUserInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static returnUserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static returnUserInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static returnUserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static returnUserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static returnUserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static returnUserInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static returnUserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private returnUserInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(returnUserInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<returnUserInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(returnUserInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private returnUserInfo result;
    
    private returnUserInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        returnUserInfo original = result;
        result = new returnUserInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override returnUserInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::returnUserInfo.Descriptor; }
    }
    
    public override returnUserInfo DefaultInstanceForType {
      get { return global::returnUserInfo.DefaultInstance; }
    }
    
    public override returnUserInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is returnUserInfo) {
        return MergeFrom((returnUserInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(returnUserInfo other) {
      if (other == global::returnUserInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasRoomID) {
        RoomID = other.RoomID;
      }
      if (other.HasPalyStatus) {
        PalyStatus = other.PalyStatus;
      }
      if (other.HasHeadPortrait) {
        HeadPortrait = other.HeadPortrait;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_returnUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _returnUserInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasId = input.ReadInt32(ref result.id_);
            break;
          }
          case 16: {
            result.hasRoomID = input.ReadInt32(ref result.roomID_);
            break;
          }
          case 24: {
            result.hasPalyStatus = input.ReadInt32(ref result.palyStatus_);
            break;
          }
          case 34: {
            result.hasHeadPortrait = input.ReadString(ref result.headPortrait_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public int Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(int value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasRoomID {
      get { return result.hasRoomID; }
    }
    public int RoomID {
      get { return result.RoomID; }
      set { SetRoomID(value); }
    }
    public Builder SetRoomID(int value) {
      PrepareBuilder();
      result.hasRoomID = true;
      result.roomID_ = value;
      return this;
    }
    public Builder ClearRoomID() {
      PrepareBuilder();
      result.hasRoomID = false;
      result.roomID_ = 0;
      return this;
    }
    
    public bool HasPalyStatus {
      get { return result.hasPalyStatus; }
    }
    public int PalyStatus {
      get { return result.PalyStatus; }
      set { SetPalyStatus(value); }
    }
    public Builder SetPalyStatus(int value) {
      PrepareBuilder();
      result.hasPalyStatus = true;
      result.palyStatus_ = value;
      return this;
    }
    public Builder ClearPalyStatus() {
      PrepareBuilder();
      result.hasPalyStatus = false;
      result.palyStatus_ = 0;
      return this;
    }
    
    public bool HasHeadPortrait {
      get { return result.hasHeadPortrait; }
    }
    public string HeadPortrait {
      get { return result.HeadPortrait; }
      set { SetHeadPortrait(value); }
    }
    public Builder SetHeadPortrait(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHeadPortrait = true;
      result.headPortrait_ = value;
      return this;
    }
    public Builder ClearHeadPortrait() {
      PrepareBuilder();
      result.hasHeadPortrait = false;
      result.headPortrait_ = "";
      return this;
    }
  }
  static returnUserInfo() {
    object.ReferenceEquals(global::PlayMJ.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
